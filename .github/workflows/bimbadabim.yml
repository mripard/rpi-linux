name: HDMI Build Testing

on:
  pull_request:
    branches: [ "rpi-*"]

  push:
    branches: [ "rpi-*"]

env:
  NUM_JOBS: 40

jobs:
  build-arm64:
    name: Kernel Build for ARM64
    runs-on: [self-hosted, linux, x64]
    env:
      ARTIFACTS_ARCHIVE: build-artifacts-arm64-bcm2711.tar.xz
      ARTIFACTS_DIR: build-artifacts
      MOD_TMP_DIR: build-modules

    steps:
      - uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu

      - name: Build Kernel, Modules and Device Trees
        run: |
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j ${{ env.NUM_JOBS }} bcm2711_defconfig Image.gz modules dtbs

      - name: Copy the Kernel Image
        run: |
          mkdir -p ${{ env.ARTIFACTS_DIR }}
          cp arch/arm64/boot/Image.gz ${{ env.ARTIFACTS_DIR }}/

      - name: Package the Device Trees
        run: |
          mkdir -p ${{ env.ARTIFACTS_DIR }}
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- INSTALL_DTBS_PATH=${{ env.ARTIFACTS_DIR }} -j ${{ env.NUM_JOBS }} dtbs_install

      - name: Copy the Modules
        run: |
          mkdir -p ${{ env.ARTIFACTS_DIR }}
          make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- INSTALL_MOD_PATH=${{ env.MOD_TMP_DIR }} -j ${{ env.NUM_JOBS }} modules_install

      - name: Create the Modules Initramfs
        run: |
          pushd ${{ env.MOD_TMP_DIR }}
          find . -print0 | \
                cpio --null --create --verbose --format=newc \
                > ${{ env.ARTIFACTS_DIR }}/modules.cpio
          popd

      - name: Create the Artifacts Archive
        run: |
          tar -cJvf ${{ env.ARTIFACTS_ARCHIVE }} -C ${{ env.ARTIFACTS_DIR }}/build .

      - name: Upload the Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ${{ env.ARTIFACTS_ARCHIVE }}
